{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useParams,useNavigate}from'react-router-dom';import{useCharacterContext}from'../CharacterContext';import styles from'./CardDetail.module.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CardDetail=()=>{const{_id}=useParams();const[character,setCharacter]=useState(null);const navigate=useNavigate();const{characters}=useCharacterContext();const[loading,setLoading]=useState(true);useEffect(()=>{const existingCharacter=characters.find(char=>char._id===_id);if(existingCharacter){setCharacter(existingCharacter);setLoading(false);}else if(_id){fetch(\"https://api.disneyapi.dev/character/\".concat(_id)).then(response=>response.json()).then(data=>{setCharacter(data.data);setLoading(false);}).catch(error=>{console.error('Error fetching character data:',error);setLoading(false);});}else{setLoading(false);}},[_id,characters]);const handleBackClick=()=>{navigate('/');};if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}if(!character){return/*#__PURE__*/_jsx(\"div\",{children:\"Character not found\"});}return/*#__PURE__*/_jsxs(\"div\",{className:styles[\"detail-container\"],children:[/*#__PURE__*/_jsx(\"button\",{className:styles[\"button-back\"],onClick:handleBackClick,children:\"Back to the list\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles[\"container\"],children:[/*#__PURE__*/_jsx(\"h1\",{className:styles[\"character-name\"],children:character.name}),/*#__PURE__*/_jsx(\"img\",{src:character.imageUrl,alt:character.name,className:styles[\"character-image\"]}),/*#__PURE__*/_jsxs(\"div\",{className:styles[\"text-container\"],children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Films: \"}),character.films.join(', ')]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"ShortFilms: \"}),character.shortFilms.join(', ')]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"TvShows: \"}),character.tvShows.join(', ')]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"VideoGames: \"}),character.videoGames.join(', ')]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Source: \"}),/*#__PURE__*/_jsx(\"a\",{href:character.sourceUrl,target:\"_blank\",rel:\"noopener noreferrer\",children:\"more detailed\"})]})]})]})]});};export default CardDetail;","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","useCharacterContext","styles","jsx","_jsx","jsxs","_jsxs","CardDetail","_id","character","setCharacter","navigate","characters","loading","setLoading","existingCharacter","find","char","fetch","concat","then","response","json","data","catch","error","console","handleBackClick","children","className","onClick","name","src","imageUrl","alt","films","join","shortFilms","tvShows","videoGames","href","sourceUrl","target","rel"],"sources":["/Users/Olga/Desktop/disney1/src/components/CardDetail/CardDetail.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useCharacterContext } from '../CharacterContext';\nimport styles from './CardDetail.module.css';\n\ninterface CharacterDetail {\n  _id: string;\n  name: string;\n  imageUrl: string;\n  films: string[];\n  shortFilms: string[];\n  tvShows: string[];\n  videoGames: string[];\n  sourceUrl: string;\n}\n\nconst CardDetail = () => {\n  const { _id } = useParams();\n  const [character, setCharacter] = useState<CharacterDetail | null>(null);\n  const navigate = useNavigate();\n  const { characters } = useCharacterContext();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const existingCharacter = characters.find((char) => char._id === _id);\n\n    if (existingCharacter) {\n      setCharacter(existingCharacter); \n      setLoading(false);\n    } else if (_id) {\n      fetch(`https://api.disneyapi.dev/character/${_id}`)\n        .then((response) => response.json())\n        .then((data) => {\n          setCharacter(data.data); \n          setLoading(false); \n        })\n        .catch((error) => {\n          console.error('Error fetching character data:', error);\n          setLoading(false);\n        });\n    } else {\n      setLoading(false); \n    }\n  }, [_id, characters]); \n\n  const handleBackClick = () => {\n    navigate('/');\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!character) {\n    return <div>Character not found</div>;\n  }\n\n  return (\n    <div className={styles[\"detail-container\"]}>\n      <button className={styles[\"button-back\"]} onClick={handleBackClick}>\n        Back to the list\n      </button>\n\n      <div className={styles[\"container\"]}>\n        <h1 className={styles[\"character-name\"]}>{character.name}</h1>\n        <img src={character.imageUrl} alt={character.name} className={styles[\"character-image\"]} />\n        <div className={styles[\"text-container\"]}>\n          <p><strong>Films: </strong>{character.films.join(', ')}</p>\n          <p><strong>ShortFilms: </strong>{character.shortFilms.join(', ')}</p>\n          <p><strong>TvShows: </strong>{character.tvShows.join(', ')}</p>\n          <p><strong>VideoGames: </strong>{character.videoGames.join(', ')}</p>\n          <p><strong>Source: </strong><a href={character.sourceUrl} target=\"_blank\" rel=\"noopener noreferrer\">more detailed</a></p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CardDetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}