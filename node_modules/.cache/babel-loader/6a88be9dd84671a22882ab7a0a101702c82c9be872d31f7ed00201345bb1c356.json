{"ast":null,"code":"import{useState,useEffect}from'react';import Card from'../Card/Card';import styles from'./CardList.module.css';import{Link}from'react-router-dom';import{useCharacterContext}from'../CharacterContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CardList=()=>{const[apiCards,setApiCards]=useState([]);const[favoriteCards,setFavoriteCards]=useState([]);const[showFavorites,setShowFavorites]=useState(false);const[currentPage,setCurrentPage]=useState(1);const[sortAscending,setSortAscending]=useState(true);const[isSorted,setIsSorted]=useState(false);const cardsPerPage=6;const{characters}=useCharacterContext();const[searchQuery,setSearchQuery]=useState('');//получение данных с API\nuseEffect(()=>{fetch('https://api.disneyapi.dev/character').then(response=>response.json()).then(data=>setApiCards(data.data)).catch(()=>console.error('Failed to fetch data'));},[]);const allCards=[...apiCards,...characters];const toggleFavorite=card=>{setFavoriteCards(prev=>prev.some(fav=>fav._id===card._id)?prev.filter(fav=>fav._id!==card._id):[...prev,card]);};// Отображение избранных\nconst cardsToDisplay=showFavorites?allCards.filter(card=>favoriteCards.some(fav=>fav._id===card._id)):allCards;// Фильтрация карточек по поиску\nconst filteredCards=cardsToDisplay.filter(card=>card.name.toLowerCase().includes(searchQuery.toLowerCase()));// Сортировка по алфавиту\nconst sortedCards=isSorted?cardsToDisplay.sort((a,b)=>{const comparison=a.name.localeCompare(b.name);return sortAscending?comparison:-comparison;}):cardsToDisplay;// пагинация\nconst indexOfLastCard=currentPage*cardsPerPage;const indexOfFirstCard=indexOfLastCard-cardsPerPage;const currentCards=sortedCards.slice(indexOfFirstCard,indexOfLastCard);const totalPages=Math.ceil(cardsToDisplay.length/cardsPerPage);//переключение на следующую страницу\nconst handleNextPage=()=>{if(currentPage<totalPages){setCurrentPage(prev=>prev+1);}};//переключение на предыдущую страницу\nconst handlePrevPage=()=>{if(currentPage>1){setCurrentPage(prev=>prev-1);}};// сортировка по алфавиту\nconst toggleSort=()=>{setIsSorted(true);setSortAscending(!sortAscending);setShowFavorites(false);setCurrentPage(1);};// кнопка \"All the characters\"\nconst showAllCards=()=>{setIsSorted(false);setShowFavorites(false);setCurrentPage(1);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:styles[\"cards-title\"],children:\"Disney characters\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles[\"buttons-container\"],children:[/*#__PURE__*/_jsx(\"button\",{className:styles[\"button\"],onClick:showAllCards,children:\"All the characters\"}),/*#__PURE__*/_jsx(\"button\",{className:styles[\"button\"],onClick:()=>setShowFavorites(true),children:\"Favorites\"}),/*#__PURE__*/_jsx(\"button\",{className:styles[\"button\"],onClick:toggleSort,children:\"Alphabetically\"}),/*#__PURE__*/_jsx(\"div\",{className:styles[\"add-button-container\"],children:/*#__PURE__*/_jsx(Link,{to:\"/create-character\",children:/*#__PURE__*/_jsx(\"button\",{className:\"\".concat(styles[\"button\"],\" \").concat(styles[\"button-add\"]),children:\"Add a new character\"})})})]}),/*#__PURE__*/_jsx(\"div\",{className:styles[\"card-list\"],children:cardsToDisplay.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"There are no cards\"}):currentCards.map(card=>/*#__PURE__*/_jsx(Card,{name:card.name,imageUrl:card.imageUrl,_id:card._id,toggleFavorite:toggleFavorite,isFavorite:favoriteCards.some(fav=>fav._id===card._id)},card._id))}),/*#__PURE__*/_jsxs(\"div\",{className:styles[\"pagination\"],children:[/*#__PURE__*/_jsx(\"button\",{onClick:handlePrevPage,disabled:currentPage===1,className:\"\".concat(styles[\"button\"],\" \").concat(styles[\"button-pagination\"]),children:\"Back\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Page \",currentPage,\" of \",totalPages]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleNextPage,disabled:currentPage===totalPages,className:\"\".concat(styles[\"button\"],\" \").concat(styles[\"button-pagination\"]),children:\"Next\"})]})]});};export default CardList;","map":{"version":3,"names":["useState","useEffect","Card","styles","Link","useCharacterContext","jsx","_jsx","jsxs","_jsxs","CardList","apiCards","setApiCards","favoriteCards","setFavoriteCards","showFavorites","setShowFavorites","currentPage","setCurrentPage","sortAscending","setSortAscending","isSorted","setIsSorted","cardsPerPage","characters","searchQuery","setSearchQuery","fetch","then","response","json","data","catch","console","error","allCards","toggleFavorite","card","prev","some","fav","_id","filter","cardsToDisplay","filteredCards","name","toLowerCase","includes","sortedCards","sort","a","b","comparison","localeCompare","indexOfLastCard","indexOfFirstCard","currentCards","slice","totalPages","Math","ceil","length","handleNextPage","handlePrevPage","toggleSort","showAllCards","children","className","onClick","to","concat","map","imageUrl","isFavorite","disabled"],"sources":["/Users/Olga/Desktop/disney1/src/components/CardList/CardList.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport Card from '../Card/Card';\nimport styles from './CardList.module.css'\nimport { Link } from 'react-router-dom';\nimport { useCharacterContext } from '../CharacterContext';\n\ninterface Character {\n  name: string;\n  imageUrl: string;\n  _id: string;\n}\n\nconst CardList = () => {\n  const [apiCards, setApiCards] = useState<Character[]>([]);\n  const [favoriteCards, setFavoriteCards] = useState<Character[]>([]);\n  const [showFavorites, setShowFavorites] = useState(false); \n  const [currentPage, setCurrentPage] = useState(1); \n  const [sortAscending, setSortAscending] = useState(true); \n  const [isSorted, setIsSorted] = useState(false);\n  const cardsPerPage = 6; \n  const { characters } = useCharacterContext();\n  const [searchQuery, setSearchQuery] = useState('');\n\n  //получение данных с API\n  useEffect(() => {\n    fetch('https://api.disneyapi.dev/character')\n      .then((response) => response.json())\n      .then((data) => setApiCards(data.data))\n      .catch(() => console.error('Failed to fetch data'));\n  }, []);\n\n  const allCards = [...apiCards, ...characters];\n\n  const toggleFavorite = (card: Character) => {\n    setFavoriteCards((prev) =>\n      prev.some((fav) => fav._id === card._id)\n        ? prev.filter((fav) => fav._id !== card._id)\n        : [...prev, card]\n    );\n  };\n\n  // Отображение избранных\n  const cardsToDisplay = showFavorites\n    ? allCards.filter((card) => favoriteCards.some((fav) => fav._id === card._id)) \n    : allCards; \n  \n    // Фильтрация карточек по поиску\n  const filteredCards = cardsToDisplay.filter((card) =>\n    card.name.toLowerCase().includes(searchQuery.toLowerCase()) \n  );\n\n    // Сортировка по алфавиту\n    const sortedCards = isSorted\n    ? cardsToDisplay.sort((a, b) => {\n        const comparison = a.name.localeCompare(b.name);\n        return sortAscending ? comparison : -comparison;\n      })\n    : cardsToDisplay;\n\n   // пагинация\n   const indexOfLastCard = currentPage * cardsPerPage;\n   const indexOfFirstCard = indexOfLastCard - cardsPerPage;\n   const currentCards = sortedCards.slice(indexOfFirstCard, indexOfLastCard);\n \n   const totalPages = Math.ceil(cardsToDisplay.length / cardsPerPage);\n      //переключение на следующую страницу\n   const handleNextPage = () => {\n     if (currentPage < totalPages) {\n       setCurrentPage((prev) => prev + 1);\n     }\n   };\n   //переключение на предыдущую страницу\n   const handlePrevPage = () => {\n     if (currentPage > 1) {\n       setCurrentPage((prev) => prev - 1);\n     }\n   };\n// сортировка по алфавиту\n   const toggleSort = () => {\n    setIsSorted(true); \n    setSortAscending(!sortAscending); \n    setShowFavorites(false); \n    setCurrentPage(1);\n  };\n// кнопка \"All the characters\"\n  const showAllCards = () => {\n    setIsSorted(false); \n    setShowFavorites(false);\n    setCurrentPage(1); \n  };\n\n  return (\n    <div>\n        <h1 className={ styles[\"cards-title\"] }>Disney characters</h1>\n        <div className={ styles[\"buttons-container\"] }>\n          <button \n            className={ styles[\"button\"] }\n            onClick={showAllCards}>All the characters</button>\n\n          <button \n            className={ styles[\"button\"] }\n            onClick={() => setShowFavorites(true)}>Favorites</button>\n\n          <button \n            className={ styles[\"button\"] }\n            onClick={toggleSort}\n            >Alphabetically</button>\n            \n          <div className={styles[\"add-button-container\"]}>\n            <Link to=\"/create-character\">\n              <button className={`${styles[\"button\"]} ${styles[\"button-add\"]}`}>Add a new character</button>\n            </Link>\n          </div>\n        </div>\n      \n\n    <div className={ styles[\"card-list\"] }>\n        {cardsToDisplay.length === 0 ? (\n          <p>There are no cards</p>\n        ) : (\n        currentCards.map((card) => (\n            <Card \n              name={card.name}\n              imageUrl={card.imageUrl}\n              key={card._id}\n              _id={card._id}\n              toggleFavorite={toggleFavorite} \n              isFavorite={favoriteCards.some((fav) => fav._id === card._id)}\n            />\n        ))\n      )}\n    </div>\n    <div className={ styles[\"pagination\"] }>\n        <button\n          onClick={handlePrevPage} \n          disabled={currentPage === 1}\n          className={`${styles[\"button\"]} ${styles[\"button-pagination\"]}`}>\n          Back\n        </button>\n        <span>\n          Page {currentPage} of {totalPages}\n        </span>\n        <button \n          onClick={handleNextPage} \n          disabled={currentPage === totalPages}\n          className={`${styles[\"button\"]} ${styles[\"button-pagination\"]}`}\n        >\n          Next\n        </button>\n      </div>\n\n</div>\n  );\n};\n\nexport default CardList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}